name: "Terraform"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./terraform
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # AWS Credential Configuration
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      #      Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      #      - name: Setup Terraform
      #        uses: hashicorp/setup-terraform@v1
      #        with:
      #          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        env:
          TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}
          TF_VAR_AMI: ${{ secrets.TF_VAR_AMI }}
          TF_VAR_INSTANCE_TYPE: ${{ secrets.TF_VAR_INSTANCE_TYPE }}
          TF_VAR_S3_BUCKET_NAME: ${{ secrets.TF_VAR_S3_BUCKET_NAME }}
          TF_VAR_BACKEND_BUCKET_NAME: ${{ secrets.TF_VAR_BACKEND_BUCKET_NAME }}
          TF_VAR_BACKEND_TABLE_NAME: ${{ secrets.TF_VAR_BACKEND_TABLE_NAME }}
        run: terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud".
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}
          TF_VAR_AMI: ${{ secrets.TF_VAR_AMI }}
          TF_VAR_INSTANCE_TYPE: ${{ secrets.TF_VAR_INSTANCE_TYPE }}
          TF_VAR_S3_BUCKET_NAME: ${{ secrets.TF_VAR_S3_BUCKET_NAME }}
          TF_VAR_BACKEND_BUCKET_NAME: ${{ secrets.TF_VAR_BACKEND_BUCKET_NAME }}
          TF_VAR_BACKEND_TABLE_NAME: ${{ secrets.TF_VAR_BACKEND_TABLE_NAME }}
        run: terraform apply -auto-approve -input=false
